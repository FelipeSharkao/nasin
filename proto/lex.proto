syntax = "proto2";

package torvo.lex;

message Module {
    required string name = 1;
    repeated Instr body  = 10;
}

// Statements
message Instr {
    oneof instr {
        FnDecl fn_decl     = 1;
        Assign assign      = 2;
        BinOp bin_op       = 3;
        FnCall fn_call     = 4;
        FnReturn fn_return = 5;
    }
}

message FnDecl {
    required string name = 1;
    repeated string args = 10;
    repeated Instr body  = 20;
}

message Assign {
    required string name = 1;
    required Value value = 2;
}

message BinOp {
    required string name  = 1;
    required BinOpType op = 2;
    required Value left   = 10;
    required Value right  = 11;
}

enum BinOpType {
    ADD = 0;
    SUB = 1;
    MUL = 2;
    DIV = 3;
    MOD = 4;
    POW = 5;
}

message FnReturn {
    required Value value = 1;
}

message FnCall {
    required string name   = 1;
    required string callee = 2;
    repeated Value args    = 10;
}

// Values
message Value {
    oneof value {
        string ident = 1;
        NumLit num   = 2;
    }
}

message NumLit {
    required string value = 1;
}
