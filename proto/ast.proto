syntax = "proto2";

package torvo.ast;

message Loc {
    required uint32 start = 1;
    required uint32 end   = 2;
}

message Module {
    optional Loc loc     = 1;
    required string name = 2;
    required string path = 3;
    repeated Stmt body   = 10;
}

// Statements
message Stmt {
    optional Loc loc = 1;
    oneof stmt {
        VarDecl var  = 10;
        FnDecl fn    = 11;
    }
}

message VarDecl {
    required Pat pat    = 1;
    required Expr value = 10;
}

message Pat {
    optional Loc loc = 1;
    oneof pat {
        NamePat name = 2;
    }
}

message NamePat {
    required string name = 1;
}

message FnDecl {
    required string name = 1;
    repeated FnArg args  = 10;
    optional Expr ret    = 15;
}

message FnArg {
    optional Loc loc = 1;
    required Pat pat = 2;
}

// Expressions
message Expr {
    optional Loc loc   = 1;
    oneof expr {
        NumLit num     = 2;
        Ident ident    = 3;
        FnCall fn_call = 4;
        BinOp bin_op   = 5;
        Block block    = 6;
        FnExpr fn_expr = 7;
    }
}

message NumLit {
    required string value = 1;
}

message Ident {
    required string name = 1;
}

message FnCall {
    required Expr callee = 1;
    repeated Expr args   = 10;
}

message BinOp {
    required BinOpType op = 1;
    required Expr left    = 10;
    required Expr right   = 11;
}

enum BinOpType {
    ADD = 0;
    SUB = 1;
    MUL = 2;
    DIV = 3;
    MOD = 4;
    POW = 5;
}

message Block {
    repeated Stmt body = 1;
    required Expr ret  = 2;
}

message FnExpr {
    repeated FnArg args = 10;
    required Expr ret   = 15;
}
